import type { TranslationKeys } from '../types';

export const en: TranslationKeys = {
  common: {
    save: 'Save',
    cancel: 'Cancel',
    loading: 'Loading...',
    success: 'Success',
    error: 'Error',
    close: 'Close',
    back: 'Back',
    next: 'Next',
    previous: 'Previous',
    yes: 'Yes',
    no: 'No',
    delete: 'Delete',
    edit: 'Edit',
    create: 'Create',
    export: 'Export',
    import: 'Import',
    execute: 'Execute',
    search: 'Search',
    add: 'Add',
    remove: 'Remove',
    clear: 'Clear',
    refresh: 'Refresh',
  },

  app: {
    title: 'Claudia',
    welcome: 'Welcome to Claudia',
    backToHome: '← Back to Home',
  },

  navigation: {
    ccAgents: 'CC Agents',
    ccProjects: 'CC Projects',
    usageDashboard: 'Usage Dashboard',
    claudemd: 'CLAUDE.md',
    mcp: 'MCP',
    settings: 'Settings',
    about: 'About',
  },

  projects: {
    title: 'CC Projects',
    description: 'Browse your Claude Code sessions',
    newSession: 'New Claude Code session',
    noProjectsFound: 'No projects found in ~/.claude/projects',
    failedToLoad: 'Failed to load projects. Please ensure ~/.claude directory exists.',
    failedToLoadSessions: 'Failed to load sessions for this project.',
    sessions: 'sessions',
    session: 'session',
    firstMessage: 'First message:',
    hasTodo: 'Has todo',
  },

  agents: {
    title: 'CC Agents',
    description: 'Manage your Claude Code agents',
    noAgents: 'No agents yet',
    createFirst: 'Create your first CC Agent to get started',
    createAgent: 'Create CC Agent',
    recentExecutions: 'Recent Executions',
    deleteAgent: 'Delete Agent',
    deleteConfirm: 'Are you sure you want to delete the agent',
    deleteWarning: 'This action cannot be undone and will permanently remove the agent and all its associated data.',
    deleting: 'Deleting...',
    created: 'Agent created successfully',
    updated: 'Agent updated successfully',
    deleted: 'Agent deleted successfully',
    imported: 'Agent imported successfully from GitHub',
    failedToDelete: 'Failed to delete agent',
    runningTitle: 'Running Sessions',
    
    // Additional translations for CCAgents
    import: 'Import',
    fromFile: 'From File',
    fromGitHub: 'From GitHub',
    agents: 'Agents',
    runningSessions: 'Running Sessions',
    execute: 'Execute',
    edit: 'Edit',
    export: 'Export',
    delete: 'Delete',
    previous: 'Previous',
    next: 'Next',
    page: 'Page',
    of: 'of',
    cancel: 'Cancel',
    exportSuccess: 'Agent exported successfully',
    exportFailed: 'Failed to export agent',
    importFromFile: 'Agent imported successfully',
    importFromGitHub: 'Agent imported successfully from GitHub',
    failedToImport: 'Failed to import agent',
    createdAt: 'Created',
    executeTitle: 'Execute agent',
    editTitle: 'Edit agent',
    exportTitle: 'Export agent to .claudia.json',
    deleteTitle: 'Delete agent',
  },

  settings: {
    title: 'Settings',
    description: 'Configure Claude Code preferences',
    saving: 'Saving...',
    saveSettings: 'Save Settings',
    saved: 'Settings saved successfully!',
    failedToSave: 'Failed to save settings',

    tabs: {
      general: 'General',
      permissions: 'Permissions',
      environment: 'Environment',
      advanced: 'Advanced',
    },

    general: {
      title: 'General Settings',
      language: 'Interface Language',
      languageDescription: 'Choose your preferred interface language',
      claudeAttribution: 'Include "Co-authored by Claude"',
      claudeAttributionDescription: 'Add Claude attribution to git commits and pull requests',
      verboseOutput: 'Verbose Output',
      verboseOutputDescription: 'Show full bash and command outputs',
      chatRetention: 'Chat Transcript Retention (days)',
      chatRetentionDescription: 'How long to retain chat transcripts locally (default: 30 days)',
      claudeInstallation: 'Claude Code Installation',
      claudeInstallationDescription: 'Select which Claude Code installation to use',
      binaryPathChanged: '⚠️ Claude binary path has been changed. Remember to save your settings.',
    },

    permissions: {
      title: 'Permission Rules',
      description: 'Control which tools Claude Code can use without manual approval',
      allowRules: 'Allow Rules',
      denyRules: 'Deny Rules',
      addRule: 'Add Rule',
      noAllowRules: 'No allow rules configured. Claude will ask for approval for all tools.',
      noDenyRules: 'No deny rules configured.',
      examples: 'Examples:',
    },

    environment: {
      title: 'Environment Variables',
      description: 'Environment variables applied to every Claude Code session',
      addVariable: 'Add Variable',
      noVariables: 'No environment variables configured.',
      commonVariables: 'Common variables:',
    },

    advanced: {
      title: 'Advanced Settings',
      description: 'Additional configuration options for advanced users',
      apiKeyHelper: 'API Key Helper Script',
      apiKeyHelperDescription: 'Custom script to generate auth values for API requests',
      rawSettings: 'Raw Settings (JSON)',
      rawSettingsDescription: 'This shows the raw JSON that will be saved to ~/.claude/settings.json',
    },
  },

  claude: {
    checking: 'Checking...',
    notFound: 'Claude Code not found',
    selectInstallation: 'Select Claude Installation',
    install: 'Install Claude Code',
    binaryPathSaved: 'Claude binary path saved successfully',
    searchingInstallations: 'Searching for Claude installations...',
    multipleFound: 'Multiple Claude Code installations were found on your system.',
    pleaseSelect: "Please select which one you'd like to use.",
    notFoundInLocations: 'Claude Code was not found in any of the common installation locations.',
    installToContinue: 'Please install Claude Code to continue.',
    searchedLocations: 'Searched locations:',
    installUsing: 'You can install Claude Code using',
  },

  mcp: {
    serverAdded: 'MCP server added successfully!',
    serverRemoved: 'Server removed successfully!',
    importedSuccess: 'Successfully imported',
    importedFailed: 'failed',
  },

  markdown: {
    saved: 'CLAUDE.md saved successfully',
    failedToSave: 'Failed to save CLAUDE.md',
    unsavedChanges: 'You have unsaved changes. Are you sure you want to leave?',
  },

  languages: {
    'zh-CN': 'Chinese (Simplified)',
    'en': 'English',
  },

  // Agent Management
  createAgent: {
    title: 'Create CC Agent',
    editTitle: 'Edit CC Agent',
    backToAgents: 'Back to Agents',
    saving: 'Saving...',
    basicInformation: 'Basic Information',
    agentName: 'Agent Name',
    agentNamePlaceholder: 'e.g., Code Assistant',
    agentNameRequired: 'Agent name is required',
    agentIcon: 'Agent Icon',
    systemPrompt: 'System Prompt',
    systemPromptRequired: 'System prompt is required',
    systemPromptDescription: 'Define the behavior and capabilities of your CC Agent',
    defaultTask: 'Default Task (Optional)',
    defaultTaskPlaceholder: 'e.g., Review this code for security issues',
    defaultTaskDescription: 'This will be used as the default task placeholder when executing the agent',
    model: 'Model',
    icon: 'Icon',
    selectIcon: 'Select an icon',
    sandboxSettings: 'Sandbox Settings',
    sandboxEnabled: 'Enable Sandbox',
    sandboxDescription: 'Run agent in a secure sandbox environment',
    filePermissions: 'File Permissions',
    enableFileRead: 'Enable File Read',
    enableFileWrite: 'Enable File Write',
    networkPermissions: 'Network Permissions',
    enableNetwork: 'Enable Network Access',
    saveAgent: 'Save Agent',
    modelSonnet: 'Claude 4 Sonnet',
    modelSonnetDescription: 'Faster, efficient for most tasks',
    modelOpus: 'Claude 4 Opus',
    modelOpusDescription: 'More capable, better for complex tasks',
    failedToCreate: 'Failed to create agent',
    failedToUpdate: 'Failed to update agent',
    unsavedChanges: 'You have unsaved changes. Are you sure you want to leave?',
  },

  agentExecution: {
    title: 'Agent Execution',
    backToAgents: 'Back to Agents',
    projectPath: 'Project Path',
    selectDirectory: 'Select Directory',
    selectProjectDirectory: 'Select Project Directory',
    task: 'Task',
    taskPlaceholder: 'Enter the task for the agent',
    model: 'Model',
    execute: 'Execute',
    stop: 'Stop',
    executeAgent: 'Execute Agent',
    stopExecution: 'Stop Execution',
    execution: 'Execution',
    executionStarted: 'Execution started',
    executionCompleted: 'Execution completed',
    executionStopped: 'Execution stopped',
    executionError: 'Execution error',
    projectPathRequired: 'Project path is required',
    taskRequired: 'Task is required',
    elapsed: 'Elapsed',
    tokens: 'tokens',
    totalTokens: 'Total Tokens',
    copyOutput: 'Copy Output',
    copyAsJsonl: 'Copy as JSONL',
    copyAsMarkdown: 'Copy as Markdown',
    copySuccess: 'Output copied to clipboard',
    copyFailed: 'Failed to copy output',
    fullscreen: 'View Fullscreen',
    closeFullscreen: 'Close Fullscreen',
    rawJsonl: 'Raw JSONL Output',
    executionLog: 'Execution Log',
    readyToExecute: 'Ready to Execute',
    readyToExecuteDescription: 'Select a project path and enter a task to run the agent',
    initializingAgent: 'Initializing agent...',
    failedToSelectDirectory: 'Failed to select directory',
    failedToExecuteAgent: 'Failed to execute agent',
    agentExecutionFailed: 'Agent execution failed',
    agentExecutionCancelled: 'Agent execution was cancelled',
    executionStoppedByUser: 'Execution stopped by user',
    runningDescription: 'Click back to return to main menu - view in CC Agents > Running Sessions',
    executeDescription: 'Execute CC Agent',
    confirmNavigation: 'An agent is currently running. If you navigate away, the agent will continue running in the background. You can view running sessions in the \'Running Sessions\' tab within CC Agents.\n\nDo you want to continue?',
    agentNameOutput: 'Output',
  },

  usageDashboard: {
    title: 'Usage Dashboard',
    backToHome: 'Back to Home',
    overview: 'Overview',
    sessions: 'Sessions',
    loading: 'Loading usage statistics...',
    failedToLoad: 'Failed to load usage statistics. Please try again.',
    totalCost: 'Total Cost',
    totalTokens: 'Total Tokens',
    inputTokens: 'Input Tokens',
    outputTokens: 'Output Tokens',
    totalSessions: 'Total Sessions',
    dateRange: 'Date Range',
    allTime: 'All Time',
    last7Days: 'Last 7 Days',
    last30Days: 'Last 30 Days',
    costBreakdown: 'Cost Breakdown',
    tokenBreakdown: 'Token Breakdown',
    sessionBreakdown: 'Session Breakdown',
    noData: 'No usage data available',
    projectName: 'Project',
    sessionDate: 'Date',
    duration: 'Duration',
    cost: 'Cost',
    tokens: 'Tokens',
    exportData: 'Export Data',
  },

  mcpManager: {
    title: 'MCP Manager',
    description: 'Manage Model Context Protocol servers',
    backToHome: 'Back to Home',
    servers: 'Servers',
    addServer: 'Add Server',
    importExport: 'Import/Export',
    loading: 'Loading MCP servers...',
    failedToLoad: 'Failed to load MCP servers. Make sure Claude Code is installed.',
    noServers: 'No MCP servers configured',
    serverAdded: 'MCP server added successfully!',
    serverRemoved: 'Server removed successfully!',
    importSuccess: 'Successfully imported',
    importFailed: 'failed',
    serverName: 'Server Name',
    serverCommand: 'Command',
    serverArgs: 'Arguments',
    serverEnv: 'Environment',
    removeServer: 'Remove Server',
    editServer: 'Edit Server',
    testConnection: 'Test Connection',
  },


};